import 'package:flutter/material.dart';
import 'package:App_SHe/Theme-Library/Theme.dart';

// ignore: camel_case_types
class searchbar extends StatefulWidget {
  final List<String> list = List.generate(10, (index) => "Text $index");

  searchbar({super.key});

  @override
  // ignore: library_private_types_in_public_api
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<searchbar> {
  @override
  Widget build(BuildContext context) {
    false;
    const ThemeLibraryDark();
    return Scaffold(
      backgroundColor: const Color.fromARGB(255, 46, 46, 46),
      appBar: AppBar(
        backgroundColor: Color.fromARGB(255, 51, 10, 105),
        actions: <Widget>[
          IconButton(
            onPressed: () {
              showSearch(context: context, delegate: Search(widget.list));
            },
            icon: const Icon(Icons.search),
          )
        ],
        centerTitle: true,
        title: const Text('Search Bar'),
      ),
    );
  }
}

class Search extends SearchDelegate {
  @override
  List<Widget> buildActions(BuildContext context) {
    return <Widget>[
      IconButton(
        icon: const Icon(Icons.close),
        onPressed: () {
          query = "";
        },
      ),
    ];
  }

  @override
  Widget buildLeading(BuildContext context) {
    return IconButton(
      icon: const Icon(Icons.arrow_back),
      onPressed: () {
        Navigator.pop(context);
      },
    );
  }

  String selectedResult = "";

  @override
  Widget buildResults(BuildContext context) {
    return Center(
      child: Text(selectedResult),
    );
  }

  final List<String> listExample;
  Search(this.listExample);

  List<String> recentList = ["Text 4", "Text 3"];

  @override
  Widget buildSuggestions(BuildContext context) {
    List<String> suggestionList = [];
    query.isEmpty
        ? suggestionList = recentList //In the true case
        : suggestionList.addAll(
            listExample.where(
              // In the false case
              (element) => element.contains(query),
            ),
          );

    return ListView.builder(
      itemCount: suggestionList.length,
      itemBuilder: (context, index) {
        return ListTile(
          title: Text(
            suggestionList[index],
          ),
          leading:
              query.isEmpty ? const Icon(Icons.access_time) : const SizedBox(),
          onTap: () {
            selectedResult = suggestionList[index];
            showResults(context);
          },
        );
      },
    );
  }
}


//-----------------------------------------------------------------------------------------------------------------\\---------------

import 'dart:ui';

import 'package:flutter/material.dart';

class FirstPage extends StatefulWidget {
  @override
  _FirstPageState createState() => _FirstPageState();
}

class _FirstPageState extends State<FirstPage> {
  Icon _searchIcon = Icon(Icons.search);
  Widget _searchBar = Text("Search Bar AppBar");
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: _searchBar,
        leading:
            IconButton(icon: Icon(Icons.menu), onPressed: () => print("Menu")),
        actions: [
          IconButton(
              icon: _searchIcon,
              onPressed: () {
                setState(() {
                  if (this._searchIcon.icon == Icons.search) {
                    this._searchIcon = Icon(Icons.cancel);
                    this._searchBar = TextField(
                        decoration: InputDecoration(
                            border: InputBorder.none, hintText: "Search..."),
                        textInputAction: TextInputAction.go,
                        style: TextStyle(
                            color: Color.fromARGB(255, 53, 53, 53),
                            fontSize: 15.0));
                  } else {
                    this._searchIcon = Icon(Icons.search);
                    this._searchBar = Text("Search Bar AppBar");
                  }
                });
              }),
          IconButton(
              icon: Icon(Icons.more_vert), onPressed: () => print("more vert")),
        ],
        elevation: 10.0,
      ),
    );
  }
}



